import re

import pymysql
from telebot import types

import assets.photo
from assets import tokens
from assets.keysValues import buttonsKey
from assets.tools import tools


class text():
    def __init__(self, bot):
        self.lisener(bot)
        self.user = False
        self.ipv = False
        self.userID = False

    def lisener(self, bot):
        try:
            @bot.message_handler(content_types=['text'])
            def send_text(message):

                if message.text == 'üêé –û–± –º–Ω–µ':
                    tools.setValue(message.chat.id, 'step', 'kedro')
                    bot.send_message(message.chat.id, '–Ø –õ–∏–º–±–æ! –õ—é–±–ª—é –æ—á–µ–Ω—å –ø–æ–µ—Å—Ç—å, –ø–æ—Ñ—ã—Ä–∫–∞—Ç—å –Ω–∞ –ø—Ä–æ—Ö–æ–¥—è—â–∏—Ö –ª–æ—à–∞–¥–µ–π —Å '
                                                      '–ö–µ–¥—Ä–æ, '
                                                      '–∞ —Ç–∞–∫ –∂–µ –∫–æ–Ω—é—Ö–∞ —É–¥–∏–≤–∏—Ç—å —É—Ç—Ä–æ–º)',
                                     reply_markup=buttonsKey.Kedro(message.chat.id))

                elif message.text == 'üõñ –ö–æ–Ω—é—à–Ω–∏':
                    if tools.setValue(message.chat.id, "step", "kon1"):
                        bot.send_message(message.chat.id, '–ê –∫–∞–∫–æ–π –≥–æ—Ä–æ–¥?', )
                    else:
                        bot.send_message(message.chat.id, '–≠–º.. –ß—Ç–æ-—Ç–æ –Ω–µ —Ç–∞–∫', )
                        tools.setValue(message.chat.id, 'step', False)


                elif message.text == 'üõçÔ∏è –ê–º—É–Ω–∏—á–Ω–∏–∫':
                    tools.getInfo(bot, message.chat.id, 0)
                    tools.setValue(message.chat.id, 'step', False)

                elif message.text == 'üëà –ù–∞–∑–∞–¥':
                    if tools.getValue(message.chat.id, 'step') == 'addIp':
                        bot.send_message(message.chat.id, "–ê–≥–∞", reply_markup=buttonsKey.lognView(message.chat.id))
                        tools.setValue(message.chat.id, 'step', "login")

                    else:
                        bot.send_message(message.chat.id, "–ê–≥–∞", reply_markup=buttonsKey.homeView(message.chat.id))
                        tools.setValue(message.chat.id, 'step', False)

                elif message.text == 'üí¨ –ü–æ–º–æ—â—å':
                    bot.send_message(message.chat.id,
                                     '–Ø –º–æ–≥—É —Ç–µ–±–µ –ø–æ–¥—Å–∫–∞–∑–∞—Ç—å –∫–æ–Ω, –ø–æ–∫–∞–∑–∞—Ç—å –∏–∑ –∞–º—É–Ω–∏—á–Ω–∏–∫–∞ –∏–Ω—Ç–µ—Ä–µ—Å–Ω—ã–µ –≤–µ—â–∏)',
                                     reply_markup=buttonsKey.homeView(message.chat.id))
                    tools.setValue(message.chat.id, 'step', False)

                elif message.text == '–ß–∞—Å—Ç–Ω–∏–∫':
                    tools.setValue(message.chat.id, 'step', 'admin1')
                    bot.send_message(message.chat.id, '–ö–∞–∫ –≤—ã —Ö–æ—Ç–∏—Ç–µ –∞–¥–º–∏–Ω—É –Ω–∞–ø–∏—Å–∞—Ç—å?',
                                     reply_markup=buttonsKey.adminView(message.chat.id))

                elif message.text == '–°–æ–æ–±—â–∏—Ç—å –≤—Å–µ–º>':
                    if (message.chat.id == tokens.userAdminChat):
                        tools.setValue(message.chat.id, 'step', 'sendAll1')
                        bot.send_message(message.chat.id, '–ß—Ç–æ —Å–æ–æ–±—â–∏—Ç—å?')

                    else:
                        bot.send_message(message.chat.id, '–ì–æ–≤–æ—Ä–∏ –ø–æ –ª–æ—à–∏–¥–∏–Ω–æ–º—É! –Ø –Ω–µ –ø–æ–Ω–∏–º–∞—é —Ç–µ–±—è')
                        tools.setValue(message.chat.id, 'step', False)

                elif message.text == "–î–æ–±–∞–≤–∏—Ç—å>":
                    if message.chat.id == tokens.userAdminChat:
                        tools.setValue(message.chat.id, 'step', 'addInfo1')
                        bot.send_message(message.chat.id, '–ß—Ç–æ –¥–æ–±–∞–≤–∏—Ç—å?',
                                         reply_markup=buttonsKey.addView(message.chat.id))

                    else:
                        bot.send_message(message.chat.id, '–ì–æ–≤–æ—Ä–∏ –ø–æ –ª–æ—à–∏–¥–∏–Ω–æ–º—É! –Ø –Ω–µ –ø–æ–Ω–∏–º–∞—é —Ç–µ–±—è')
                        tools.setValue(message.chat.id, 'step', False)

                else:
                    result = tools.getValue(message.chat.id, "step")
                    if (result == False):
                        bot.send_message(message.chat.id, '–ì–æ–≤–æ—Ä–∏ –ø–æ –ª–æ—à–∏–¥–∏–Ω–æ–º—É! –Ø –Ω–µ –ø–æ–Ω–∏–º–∞—é —Ç–µ–±—è')

                    elif (result == "kon1"):
                        bot.send_message(message.chat.id, "–ò—â—É –∫–æ–Ω")
                        tools.setValue(message.chat.id, 'step', False)

                    elif (result == 'kedro'):
                        tools.setValue(message.chat.id, 'step', False)
                        if message.text == '–ö–µ–¥—Ä–æ?':
                            bot.send_message(message.chat.id,
                                             '–ö–µ–¥—Ä–æ –º–æ–π –¥—Ä—É–≥! –û–Ω –∂–∏–≤–µ—Ç –ø–æ —Å–æ—Å–µ–¥—Å—Ç–≤—É —Å –Ω–∏–º. –ë—ã–≤–∞–µ–º –±–∞–ª—É–µ–º—Å—è, —Ö–∏—Ö–∏–∫–∞–µ–º, –≥—É–ª—è–µ–º –≤ –ª–µ–≤–∞–¥–µ –æ–±—Å—É–∂–¥–∞—è –∫–æ–±—ã–ª –≤ —Å–æ—Å–µ–¥–Ω–µ–π –ª–µ–≤–∞–¥–µ)',
                                             reply_markup=buttonsKey.homeView(message.chat.id))
                    elif (result == 'addInfo1'):
                        if message.text == '–ê–º—É–Ω–∏—á–Ω–∏–∫':
                            tools.setValue(message.chat.id, 'step', 'addInfo_A')
                            bot.send_message(message.chat.id,
                                             '–î–æ–±–∞–≤–ª–µ —Ñ–æ—Ç–∞–≥—Ä–∞—Ñ–∏—é —Å —Ç–µ–∫—Å—Ç–æ–º',
                                             reply_markup=buttonsKey.BackView(message.chat.id))
                        elif message.text == '–ö–æ–Ω—é—à–Ω—è':
                            tools.setValue(message.chat.id, 'step', 'addInfo_S')
                            bot.send_message(message.chat.id,
                                             '–î–æ–±–∞–≤–ª–µ —Ñ–æ—Ç–∞–≥—Ä–∞—Ñ–∏—é —Å —Ç–µ–∫—Å—Ç–æ–º',
                                             reply_markup=buttonsKey.BackView(message.chat.id))
                        elif message.text == '–ù–æ–≤–æ—Å—Ç—å':
                            tools.setValue(message.chat.id, 'step', 'addInfo_N')
                            bot.send_message(message.chat.id,
                                             '–î–æ–±–∞–≤–ª–µ —Ñ–æ—Ç–∞–≥—Ä–∞—Ñ–∏—é —Å —Ç–µ–∫—Å—Ç–æ–º',
                                             reply_markup=buttonsKey.BackView(message.chat.id))
                        elif message.text == 'üëà –ù–∞–∑–∞–¥':
                            tools.setValue(message.chat.id, 'step', False)
                            bot.send_message(message.chat.id,
                                             '–ê–≥–∞',
                                             reply_markup=buttonsKey.homeView(message.chat.id))
                        else:
                            bot.send_message(message.chat.id,
                                             '–ü–æ–ø–æ—Ä–æ–±—É–π –≤—ã–±—Ä–∞—Ç—å –∏–∑ –∫–Ω–æ–ø–æ–∫')

                    elif result == 'admin1':
                        if message.text == '–ß–µ—Ä–µ–∑ —Ç–µ–±—è':
                            tools.setValue(message.chat.id, 'step', 'admin2')
                            bot.send_message(message.chat.id, '–ß—Ç–æ —Å–æ–æ–±—â–∏—Ç—å?',
                                             reply_markup=buttonsKey.BackView(message.chat.id))
                        elif message.text == '–í–ö':
                            bot.send_message(message.chat.id, '–í–æ—Ç –µ–≥–æ –≤–∫: https://vk.com/denis_hik',
                                             reply_markup=buttonsKey.homeView(message.chat.id))
                            tools.setValue(message.chat.id, 'step', False)
                        elif message.text == '–ò–Ω—Å—Ç–∞':
                            bot.send_message(message.chat.id, '–í–æ—Ç –µ–≥–æ –∏–Ω—Å—Ç–∞: https://instagram.com/denis_hik',
                                             reply_markup=buttonsKey.homeView(message.chat.id))
                            tools.setValue(message.chat.id, 'step', False)
                        else:
                            bot.send_message(message.chat.id, '–í—ã–±–µ—Ä–∏ –∏–∑ –∫–Ω–æ–ø–æ–∫')
                            tools.setValue(message.chat.id, 'step', 'admin1')

                    elif result == 'admin2':
                        bot.send_message(tokens.userAdminChat,
                                         str(message.chat.id) + '(' + message.chat.username + ")> " + message.text)
                        bot.send_message(message.chat.id, '–Ø –µ–º—É –ø–µ—Ä–µ–¥–∞–º)')
                        tools.setValue(message.chat.id, 'step', False)



                    elif (result == 'sendAll1'):
                        tools.setValue(message.chat.id, 'step', False)
                        if (message.chat.id == tokens.userAdminChat):
                            tools.sendAll(bot, message.text)
                        else:
                            bot.send_message(message.chat.id, '–û—à–∏–±–∫–∞! –¢—ã –Ω–µ –º–æ–π —Ö–æ–∑—è–∏–Ω!',
                                             reply_markup=buttonsKey.homeView(message.chat.id))

                    elif (result == 'login'):
                        data = [False, False]
                        try:
                            #get message text
                            data = message.text

                            #get login & password
                            data = data.split(' ', 1)

                            #get login base
                            dbNAme = tokens.dbBase

                            userDb = data[0].split('@', 1)[0]
                            if (data[0] and data[1]):
                                command = "SELECT `users`.* FROM `users`;"
                                print(command + data[0] + data[1])
                                usersDB = tools.loginBase(command, data[0], data[1])

                                for user in usersDB:
                                    if (user[1] == data[0]):
                                        self.userID = user[0]
                                        self.ipsBase = user[3]

                                self.userDb = userDb
                                self.user = data[0]
                                self.password = data[1]
                                bot.send_message(message.chat.id, '–ü—Ä–∏–≤–µ—Ç,' + str(data[0]),
                                                 reply_markup=buttonsKey.lognView(message.chat.id))
                                tools.setValue(message.chat.id, 'step', 'login1')

                        except Exception as e:
                            bot.send_message(message.chat.id, '–ß—Ç–æ—Ç–æ –Ω–µ —Ç–∞–∫\n' + str(e), reply_markup=buttonsKey.errorInline(message.chat.id))

                            pass

                    elif (result == 'login1'):
                        if (message.text == 'Clear ips'):
                            tools.clear_ips(self.user, self.password, self.userID)
                            bot.send_message(message.chat.id, 'IP list –æ—á–∏—â–µ–Ω',
                                             reply_markup=buttonsKey.lognView(message.chat.id))
                            self.ipsBase = ''
                            tools.setValue(message.chat.id, 'step', 'login1')

                        if (message.text == 'Sign Out'):
                            bot.send_message(message.chat.id, '–£—Å–ø–µ—à–Ω—ã–π –≤—ã—Ö–æ–¥',
                                             reply_markup=buttonsKey.homeView(message.chat.id))
                            tools.setValue(message.chat.id, 'step', False)

                        if (message.text == 'Add ip'):
                            bot.send_message(message.chat.id, '–ù–∞–ø–∏—à–∏—Ç–µ Ipv6 –≤–∞—à', reply_markup=buttonsKey.addIpView(message.chat.id))
                            tools.setValue(message.chat.id, 'step', 'addIp')

                    elif (result == 'addIp'):
                        ipInput = message.text
                        if (message.text == 'Your ipv6'):
                            ipInput = tools.get_ip(message.text)

                        if (self.userID == False):
                            bot.send_message(message.chat.id, 'UserId not found',
                                             reply_markup=buttonsKey.lognView(message.chat.id))
                            tools.setValue(message.chat.id, 'step', 'login1')

                        else:
                            try:
                                self.ipsBase.index(ipInput)
                                bot.send_message(message.chat.id, 'IP —É–∂–µ –µ—Å—Ç—å',
                                                 reply_markup=buttonsKey.lognView(message.chat.id))
                                tools.setValue(message.chat.id, 'step', 'login1')

                            except:
                                tools.updateIpBase(self.user, self.password, self.ipsBase + ',' + ipInput, self.userID)
                                bot.send_message(message.chat.id, 'IP –¥–æ–±–∞–≤–ª–µ–Ω',
                                                 reply_markup=buttonsKey.lognView(message.chat.id))
                                tools.setValue(message.chat.id, 'step', 'login1')



                    elif (result == 'close'):
                        if (message.chat.id == tokens.userAdminChat):
                            tools.setValue(message.chat.id, 'step', False)
                            print('Bot stopping...')
                            print('s' + 1)

                        else:
                            bot.send_message(message.chat.id, '–û—à–∏–±–∫–∞! –¢—ã –Ω–µ –º–æ–π —Ö–æ–∑—è–∏–Ω!',
                                             reply_markup=buttonsKey.homeView(message.chat.id))
                            tools.setValue(message.chat.id, 'step', False)
                    else:
                        bot.send_message(message.chat.id, '–ì–æ–≤–æ—Ä–∏ –ø–æ –ª–æ—à–∏–¥–∏–Ω–æ–º—É! –Ø –Ω–µ –ø–æ–Ω–∏–º–∞—é —Ç–µ–±—è')
                        tools.setValue(message.chat.id, 'step', False)

        except Exception as e:
            print('BOT> Error in text.py{lisener}: ', e)
